# Generated by Django 4.1.7 on 2023-02-25 03:05

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveDirectoryAPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net_id', models.TextField()),
                ('full_name', models.TextField()),
                ('puid', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('pu_status', models.TextField()),
                ('department', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialCollegeFacebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('track', models.TextField()),
                ('concentration', models.TextField()),
                ('class_year', models.IntegerField()),
                ('res_college', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookCertificates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificates', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookCities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cities', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookClassYears',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_years', models.IntegerField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookConcentrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concentration', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookCountries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countries', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookExtracurricularPositions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positions', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookExtracurricularsSubgroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subgroup', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookInterests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interests', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookNetIDs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net_id', models.TextField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookPronouns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pronouns', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookResidentialColleges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('residential_colleges', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookTracks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track', models.TextField(unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookIndividualNotes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('source_net_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_net_id_individual', to='base.tigerbooknetids')),
                ('target_net_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_net_id_individual', to='base.tigerbooknetids')),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookGroupNotes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('shared_net_ids', models.ManyToManyField(related_name='shared_group', to='base.tigerbooknetids')),
                ('source_net_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_net_id_group', to='base.tigerbooknetids')),
                ('target_net_ids', models.ManyToManyField(related_name='target_net_ids_group', to='base.tigerbooknetids')),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookExtracurriculars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extracurriculars', models.TextField(unique=True)),
                ('image_url', models.URLField(null=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('subgroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.tigerbookclassyears')),
            ],
        ),
        migrations.CreateModel(
            name='TigerBookDirectory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('puid', models.TextField(db_index=True)),
                ('full_name', models.TextField(db_index=True)),
                ('is_visible_to_undergrads', models.BooleanField(default=True)),
                ('is_visible_to_faculty', models.BooleanField(default=True)),
                ('is_visible_to_graduate_students', models.BooleanField(default=False)),
                ('is_visible_to_alumni', models.BooleanField(default=False)),
                ('profile_picture_url', models.URLField(null=True)),
                ('housing', models.TextField(null=True)),
                ('housing_roommates', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('aliases', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('research_types', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('research_titles', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('miscellaneous_attributes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('certificates', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookcertificates')),
                ('class_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.tigerbookclassyears')),
                ('concentration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.tigerbookconcentrations')),
                ('extracurricular_positions', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookextracurricularpositions')),
                ('extracurriculars', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookextracurriculars')),
                ('home_cities', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookcities')),
                ('home_countries', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookcountries')),
                ('interests', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookinterests')),
                ('net_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.tigerbooknetids')),
                ('post_grad_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.tigerbookcities')),
                ('post_grad_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.tigerbookcountries')),
                ('prohibited_net_ids', models.ManyToManyField(null=True, related_name='+', to='base.tigerbooknetids')),
                ('pronouns', models.ManyToManyField(null=True, related_name='shared_people', to='base.tigerbookpronouns')),
                ('res_college', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.tigerbookresidentialcolleges')),
                ('track', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.tigerbooktracks')),
            ],
        ),
    ]
